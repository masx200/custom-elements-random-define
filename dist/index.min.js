const t = window.Reflect, {get: e, has: o, set: n} = t;

function r(t) {
    return !!("function" == typeof t && t.prototype && t.prototype instanceof HTMLElement);
}

if ("object" != typeof (i = window.customElements) || null === i) throw new TypeError(" customElements  not supported !");

var i;

window.CustomElementRegistry = t.get(window.customElements, "constructor");

const l = Symbol.for("elementset"), a = Symbol.for("elementmap"), {CustomElementRegistry: s} = window, m = window.customElements;

o(m, l) || n(m, l, new Set), o(m, a) || n(m, a, Object.create(null));

var c = (t, e) => f(t, e);

function f(t, o, n = 1) {
    if (!r(t)) throw TypeError("invalid custom element class !");
    if (e(m, l).has(t)) return function(t, e) {
        const o = Object.entries(t).find((t => t[1] === e));
        return o ? o[0] : void 0;
    }(e(m, a), t);
    {
        const r = function(t = 1) {
            return Array(t).fill(void 0).map((() => e(d, Math.floor(Math.random() * d.length)))).join("") + "-" + Array(t).fill(void 0).map((() => e(p, Math.floor(Math.random() * p.length)))).join("");
        }(n);
        return m.get(r) ? f(t, o, n + 1) : (o ? m.define(r, t, {
            extends: o
        }) : m.define(r, t), r);
    }
}

m.define = function(t, n, i) {
    if (!r(n)) throw TypeError("invalid custom element class !");
    e(m, l).has(n) ? s.prototype.define.call(m, t, n, i) : o(m[a], t) ? f(n, i ? i.extends : void 0) : (s.prototype.define.call(m, t, n, i), 
    m[l].add(n), m[a][t] = n);
}, n(m, Symbol.iterator, (() => {
    const t = Object.entries(m[a]);
    return t[Symbol.iterator].call(t);
}));

const d = Array(26).fill(void 0).map(((t, e) => 97 + e)).map((t => String.fromCharCode(t))), u = Array(16).fill(void 0).map(((t, e) => e)).map((t => t.toString(16))), p = [ ...new Set([ ...u, ...d ]) ];

export { c as default };
//# sourceMappingURL=index.min.js.map
