{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// /* eslint-disable @typescript-eslint/class-name-casing */\n// /* eslint-disable @typescript-eslint/no-empty-interface */\nconst Reflect = window.Reflect;\n\nconst {\n    get: get,\n    //     // getPrototypeOf: getPrototypeOf,\n    has: has,\n    set: set,\n} = Reflect;\n\nfunction isobject(a: any) {\n    return typeof a === \"object\" && a !== null;\n}\n\nfunction isfunction(a: any) {\n    return typeof a === \"function\";\n}\n\nfunction isclassextendsHTMLElement(\n    initclass: any\n): initclass is CustomElementConstructor {\n    return !!(\n        isfunction(initclass) &&\n        initclass.prototype &&\n        initclass.prototype instanceof HTMLElement\n    );\n}\n\nconst invalid_custom_element_class = \"invalid custom element class !\";\n\nif (!isobject(window.customElements)) {\n    console.error(\" customElements  not supported !\");\n    throw new TypeError(\" customElements  not supported !\");\n}\n\nfunction 使用value从表中查询key(\n    表: { [s: string]: CustomElementConstructor | undefined },\n    组件状态名: CustomElementConstructor\n): string | undefined {\n    const outputentrie = Object.entries(表).find((v) => {\n        return v[1] === 组件状态名;\n    });\n    return outputentrie ? outputentrie[0] : undefined;\n}\n\nwindow.CustomElementRegistry = Reflect.get(\n    window.customElements,\n    \"constructor\"\n);\n\n// const elementset = Symbol.for(\"elementset\");\n\nconst elementmap = Symbol.for(\"elementmap\");\n\nconst { CustomElementRegistry: CustomElementRegistry } = window;\n\n// class CustomElementStoreRegistry\n//     extends CustomElementRegistry\n//     implements customElementsclass\n// {\n//     [elementmap] = Object.create(null) as Record<\n//         string,\n//         CustomElementConstructor | undefined\n//     >;\n//     define(\n//         name: string,\n//         constructor: CustomElementConstructor,\n//         options?: ElementDefinitionOptions\n//     ) {\n//         super.define(name, constructor, options);\n//         this[elementmap][name] = constructor;\n//     }\n// }\n\nconst customElements: customElementsclass =\n    window.customElements as customElementsclass;\n\ninterface customElementsclass extends CustomElementRegistry {\n    [elementmap]: Record<string, CustomElementConstructor | undefined>;\n    // [elementset]: Set<CustomElementConstructor>;\n}\n// if (!has(customElements, elementset)) {\n//     set(customElements, elementset, new Set());\n// }\n\nif (!has(customElements, elementmap)) {\n    set(customElements, elementmap, Object.create(null));\n}\n\nconst RandomDefine = (\n    initclass: CustomElementConstructor,\n    extendsname?: string\n) => RandomDefineCustomElement(initclass, extendsname);\n\nfunction RandomDefineCustomElement(\n    initclass: CustomElementConstructor,\n    extendsname?: string,\n    length = 1\n): string {\n    if (!isclassextendsHTMLElement(initclass)) {\n        console.error(initclass);\n        console.error(invalid_custom_element_class);\n        throw TypeError(\"invalid custom element class !\");\n    }\n    if (!Object.values(customElements[elementmap]).includes(initclass)) {\n        const elementname = getrandomstringandnumber(length);\n        if (customElements.get(elementname)) {\n            //随机定义重名了\n            return RandomDefineCustomElement(\n                initclass,\n                extendsname,\n                length + 1\n            );\n        } else {\n            if (extendsname) {\n                customElements.define(elementname, initclass, {\n                    extends: extendsname,\n                });\n            } else {\n                customElements.define(elementname, initclass);\n            }\n        }\n        return elementname;\n    } else {\n        return 使用value从表中查询key(\n            get(customElements, elementmap),\n            initclass\n        ) as string;\n    }\n}\n\ncustomElements.define = function (\n    name: string,\n    constructor: CustomElementConstructor,\n    options?: ElementDefinitionOptions\n) {\n    //     // if (!isclassextendsHTMLElement(constructor)) {\n    //     //     console.error(constructor);\n    //     //     console.error(invalid_custom_element_class);\n    //     //     throw TypeError(\"invalid custom element class !\");\n    //     // }\n    //     // if (!get(customElements, elementset).has(constructor)) {\n    //     //     if (has(customElements[elementmap], name)) {\n    //     //         RandomDefineCustomElement(\n    //     //             constructor,\n    //     //             options ? options.extends : undefined\n    //     //         );\n    //     //     } else {\n    CustomElementRegistry.prototype.define.call(\n        customElements,\n        name,\n        constructor,\n        options\n    );\n    //     // customElements[elementset].add(constructor);\n    customElements[elementmap][name] = constructor;\n    //     //     }\n    //     // } else {\n    //     //     CustomElementRegistry.prototype.define.call(\n    //     //         customElements,\n    //     //         name,\n    //     //         constructor,\n    //     //         options\n    //     //     );\n    //     // }\n};\n\n// set(customElements, Symbol.iterator, () => {\n//     const entries = Object.entries(customElements[elementmap]);\n//     return entries[Symbol.iterator].call(entries);\n// });\n\nconst charactorlist = Array(26)\n    .fill(undefined)\n    .map((v, i) => 97 + i)\n    .map((n) => String.fromCharCode(n));\n\nconst hexnumberlist = Array(16)\n    .fill(undefined)\n    .map((v, i) => i)\n    .map((a) => a.toString(16));\n\nconst charactorandnumberlist = [\n    ...new Set([...hexnumberlist, ...charactorlist]),\n];\n\nfunction getrandomcharactor() {\n    return get(charactorlist, Math.floor(Math.random() * charactorlist.length));\n}\n\nfunction getrandomhexnumberandcharactor() {\n    return get(\n        charactorandnumberlist,\n        Math.floor(Math.random() * charactorandnumberlist.length)\n    );\n}\n\nfunction getrandomstringandnumber(length = 1) {\n    return (\n        Array(length)\n            .fill(undefined)\n            .map(() => getrandomcharactor())\n            .join(\"\") +\n        \"-\" +\n        Array(length)\n            .fill(undefined)\n            .map(() => getrandomhexnumberandcharactor())\n            .join(\"\")\n    );\n}\n\nexport default RandomDefine;\n//# sourceMappingURL=index.js.map\n"],"names":["Reflect","window","get","has","set","isobject","a","isfunction","isclassextendsHTMLElement","initclass","prototype","HTMLElement","invalid_custom_element_class","customElements","console","error","TypeError","使用value从表中查询key","表","组件状态名","outputentrie","Object","entries","find","v","undefined","CustomElementRegistry","elementmap","Symbol","for","create","RandomDefine","extendsname","RandomDefineCustomElement","length","values","includes","elementname","getrandomstringandnumber","define","extends","name","constructor","options","call","charactorlist","Array","fill","map","i","n","String","fromCharCode","hexnumberlist","toString","charactorandnumberlist","Set","getrandomcharactor","Math","floor","random","getrandomhexnumberandcharactor","join"],"mappings":"AAEA,MAAMA,UAAUC,OAAOD;;AAEvB,OACIE,KAAKA,KAELC,KAAKA,KACLC,KAAKA,OACLJ;;AAEJ,SAASK,SAASC;IACd,cAAcA,MAAM,YAAYA,MAAM;;;AAG1C,SAASC,WAAWD;IAChB,cAAcA,MAAM;;;AAGxB,SAASE,0BACLC;IAEA,UACIF,WAAWE,cACXA,UAAUC,aACVD,UAAUC,qBAAqBC;;;AAIvC,MAAMC,+BAA+B;;AAErC,KAAKP,SAASJ,OAAOY,iBAAiB;IAClCC,QAAQC,MAAM;IACd,MAAM,IAAIC,UAAU;;;AAGxB,SAASC,gBACLC,GACAC;IAEA,MAAMC,eAAeC,OAAOC,QAAQJ,GAAGK,MAAMC,KAClCA,EAAE,OAAOL;IAEpB,OAAOC,eAAeA,aAAa,KAAKK;;;AAG5CxB,OAAOyB,wBAAwB1B,QAAQE,IACnCD,OAAOY,gBACP;;AAKJ,MAAMc,aAAaC,OAAOC,IAAI;;AAE9B,OAAQH,uBAAuBA,yBAA0BzB;;AAoBzD,MAAMY,iBACFZ,OAAOY;;AAUX,KAAKV,IAAIU,gBAAgBc,aAAa;IAClCvB,IAAIS,gBAAgBc,YAAYN,OAAOS,OAAO;;;MAG5CC,eAAe,CACjBtB,WACAuB,gBACCC,0BAA0BxB,WAAWuB;;AAE1C,SAASC,0BACLxB,WACAuB,aACAE,SAAS;IAET,KAAK1B,0BAA0BC,YAAY;QACvCK,QAAQC,MAAMN;QACdK,QAAQC,MAAMH;QACd,MAAMI,UAAU;;IAEpB,KAAKK,OAAOc,OAAOtB,eAAec,aAAaS,SAAS3B,YAAY;QAChE,MAAM4B,cAAcC,yBAAyBJ;QAC7C,IAAIrB,eAAeX,IAAImC,cAAc;YAEjC,OAAOJ,0BACHxB,WACAuB,aACAE,SAAS;eAEV;YACH,IAAIF,aAAa;gBACbnB,eAAe0B,OAAOF,aAAa5B,WAAW;oBAC1C+B,SAASR;;mBAEV;gBACHnB,eAAe0B,OAAOF,aAAa5B;;;QAG3C,OAAO4B;WACJ;QACH,OAAOpB,gBACHf,IAAIW,gBAAgBc,aACpBlB;;;;AAKZI,eAAe0B,SAAS,SACpBE,MACAC,aACAC;IAcAjB,sBAAsBhB,UAAU6B,OAAOK,KACnC/B,gBACA4B,MACAC,aACAC;IAGJ9B,eAAec,YAAYc,QAAQC;;;AAiBvC,MAAMG,gBAAgBC,MAAM,IACvBC,KAAKtB,WACLuB,KAAI,CAACxB,GAAGyB,MAAM,KAAKA,IACnBD,KAAKE,KAAMC,OAAOC,aAAaF;;AAEpC,MAAMG,gBAAgBP,MAAM,IACvBC,KAAKtB,WACLuB,KAAI,CAACxB,GAAGyB,MAAMA,IACdD,KAAK1C,KAAMA,EAAEgD,SAAS;;AAE3B,MAAMC,yBAAyB,KACxB,IAAIC,IAAI,KAAIH,kBAAkBR;;AAGrC,SAASY;IACL,OAAOvD,IAAI2C,eAAea,KAAKC,MAAMD,KAAKE,WAAWf,cAAcX;;;AAGvE,SAAS2B;IACL,OAAO3D,IACHqD,wBACAG,KAAKC,MAAMD,KAAKE,WAAWL,uBAAuBrB;;;AAI1D,SAASI,yBAAyBJ,SAAS;IACvC,OACIY,MAAMZ,QACDa,KAAKtB,WACLuB,KAAI,MAAMS,uBACVK,KAAK,MACV,MACAhB,MAAMZ,QACDa,KAAKtB,WACLuB,KAAI,MAAMa,mCACVC,KAAK;;;"}